Solution Discussion
===================
(2010/12/03)

The simple approach here would be another brute force technique to slowly grind
through each possible combination of 3 digit numbers.  However, due to the
multiplicitive property of the numbers, some can be ruled out as you go and
reducing the frame of numbers needing to be checked.

For example, a sample problem with two single digit numbers.  We'd start off but
holding one term constant and then decrementing the other term one at a time.
It is best to start off at the highest possible numbers since we are seeking the
largest palindrome.

So the first set of multiplications would be:

9 | 9 8 7 6 5 4 3 2 1
8 | 
7 | 
...

After this though, we don't need to multiply anything by a "9" term since we
have just completed that and realized that nothing except 9*1 produced a
palindrome.  That first set also gave us our first largest palindrome: 9.  But
we can't stop there, we have to continue checking.

But, another detail can be determined.  We now have a lower bound on the
"internal" cursor term.  As we decrement the first time, it times anything
smaller than the smallest palindrome term (1 in this case) can't be larger than
the current largest palindrome.

9 | 9 8 7 6 5 4 3 2 1
8 | . 8 7 6 5 4 3 2 .
7 | . . 7 6 5 4 3 2 .
6 | . . . 6 5 4 3 2 .
5 | . . . . 5 4 3 2 .
4 | . . . . . 4 3 2 .
3 | . . . . . . 3 2 .
2 | . . . . . . . 2 .
1 | . . . . . . . . .


Verification
=======================
2010/12/03 - Succeed: 906609


/* vim: set textwidth=80 nu: */
